#ifndef _MATRIX_H_
#define _MATRIX_H_

#include <avr/io.h>
#include <stdint.h>

#include <LUFA/Drivers/USB/USB.h>

#include "Pin.h"

#define NUM_COLS   4
#define NUM_ROWS   4
#define NUM_LAYERS 4

static const uint8_t matrix[NUM_LAYERS][NUM_ROWS][NUM_COLS] = {
    {{HID_KEYBOARD_SC_F13, HID_KEYBOARD_SC_F14, HID_KEYBOARD_SC_F15, HID_KEYBOARD_SC_F16},
     {HID_KEYBOARD_SC_F17, HID_KEYBOARD_SC_F18, HID_KEYBOARD_SC_F19, HID_KEYBOARD_SC_F20},
     {HID_KEYBOARD_SC_F21, HID_KEYBOARD_SC_F22, HID_KEYBOARD_SC_F23, HID_KEYBOARD_SC_F24},
     {HID_KEYBOARD_SC_A, HID_KEYBOARD_SC_B, HID_KEYBOARD_SC_RESERVED, HID_KEYBOARD_SC_RESERVED}},
    {{HID_KEYBOARD_SC_X, HID_KEYBOARD_SC_B, HID_KEYBOARD_SC_C, HID_KEYBOARD_SC_D},
     {HID_KEYBOARD_SC_E, HID_KEYBOARD_SC_F, HID_KEYBOARD_SC_G, HID_KEYBOARD_SC_H},
     {HID_KEYBOARD_SC_I, HID_KEYBOARD_SC_J, HID_KEYBOARD_SC_K, HID_KEYBOARD_SC_L},
     {HID_KEYBOARD_SC_M, HID_KEYBOARD_SC_N, HID_KEYBOARD_SC_RESERVED, HID_KEYBOARD_SC_RESERVED}},
    {{HID_KEYBOARD_SC_Y, HID_KEYBOARD_SC_B, HID_KEYBOARD_SC_C, HID_KEYBOARD_SC_D},
     {HID_KEYBOARD_SC_E, HID_KEYBOARD_SC_F, HID_KEYBOARD_SC_G, HID_KEYBOARD_SC_H},
     {HID_KEYBOARD_SC_I, HID_KEYBOARD_SC_J, HID_KEYBOARD_SC_K, HID_KEYBOARD_SC_L},
     {HID_KEYBOARD_SC_M, HID_KEYBOARD_SC_N, HID_KEYBOARD_SC_RESERVED, HID_KEYBOARD_SC_RESERVED}},
    {{HID_KEYBOARD_SC_Z, HID_KEYBOARD_SC_B, HID_KEYBOARD_SC_C, HID_KEYBOARD_SC_D},
     {HID_KEYBOARD_SC_E, HID_KEYBOARD_SC_F, HID_KEYBOARD_SC_G, HID_KEYBOARD_SC_H},
     {HID_KEYBOARD_SC_I, HID_KEYBOARD_SC_J, HID_KEYBOARD_SC_K, HID_KEYBOARD_SC_L},
     {HID_KEYBOARD_SC_M, HID_KEYBOARD_SC_N, HID_KEYBOARD_SC_RESERVED, HID_KEYBOARD_SC_RESERVED}}};

static const uint8_t layer_switch_keys[NUM_ROWS][NUM_COLS] = {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 2}};

void MATRIX_Init(void);
void MATRIX_GetReport(USB_KeyboardReport_Data_t* const report_data);
#endif